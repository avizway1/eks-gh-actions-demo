name: Deploy to EKS

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name ekswithavinash --region ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Deploy to EKS
        run: |
          kubectl apply -f namespace.yaml
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml

      - name: Set Deployment Status - Success
        if: success()
        id: set_status
        run: echo "status=success" >> $GITHUB_OUTPUT

      - name: Set Deployment Status - Failure
        if: failure()
        run: echo "status=failure" >> $GITHUB_ENV
  slack-notify:
    name: Notify Slack
    needs: deploy
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify Slack - Success
        if: needs.deploy.outputs.status == 'success'
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \":white_check_mark: Deployment to *EKS* succeeded for *2048-game* in namespace *2048-game*.\"
          }" ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Notify Slack - Failure
        if: needs.deploy.outputs.status == 'failure'
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \":x: Deployment to *EKS* failed for *2048-game* in namespace *2048-game*. Please check the logs for more details.\"
          }" ${{ secrets.SLACK_WEBHOOK_URL }}
          
